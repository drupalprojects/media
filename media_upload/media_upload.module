<?php

// $Id$

/**
 * @file 
 * This module provides integration for Drupal's upload module
 * with the remig module
 */


 /**
  * Implementation of hook_media_register
  * @return 
  *   array
  */
function media_upload_media_register() {
  $registration = array(
    'media_upload_resource' => array(
      // human readable name
      'name' => t('Media Upload resource'),
      'kind' => 'resource', 
      'types' => '*',
      'description' => t('Drupal uploaded files'),
      // function to invoke when data is needed from this 
      'callbacks' => array(
        'resource' => 'media_upload_media_user_files_select',
      ),
      // human readable description
      'description' => t('Provides integration with Drupal\'s Upload module'),
      // cck field types that this works on
      'fields' => array('attachments', 'filefield'),
    ),
    
    'media_upload_display' => array(
      // human readable name
      'name' => t('Media Drupal Upload display FORMATTER'),
      'kind' => 'formatter',
      'callbacks' => array(
        'form' => 'media_upload_formatter_form',
      ),     
      'types' => '*',
      'description' => t('Format Drupal uploaded files'),       
      // human readable description
      'description' => t('Provides integration with Drupal\'s Upload module'),
      'fields' => array('attachments', 'filefield'),
    ),
    'media_upload_display2' => array(
      // human readable name
      'name' => t('Media Drupal Upload display'),
      'uri' => 'file',
      'kind' => 'resource',
      'types' => '*',
      'description' => t('Format Drupal uploaded files'),
      'callbacks' => array( 
        'resource' => 'media_upload_media_user_files_select2',
       ),      
       // human readable description
      'description' => t('Provides integration with Drupal\'s Upload module'),
      'fields' => array('attachments', 'filefield'),
    ),
  );
  // @TODO: remove media_mover related code
  if (module_exists('media_mover')) {
    $registration['media_mover'] = array(
      // human readable name
      'name' => t('Media Mover files'),
      'uri' => 'file',
      'kind' => 'resource',
      'types' => '*',
      'description' => t('Integrate Media Mover files'),
      'callbacks' => array( 
        'resource' => 'media_upload_media_mover_resource',
       ),      
       // human readable description
      'description' => t('Provides integration with Media Mover'),
      'fields' => array('attachments', 'filefield'),
    );
  }
  return $registration;
}

function media_upload_formatter_form($node_type, $field, $uri) {
  $form['test_stuff'] = array(
    '#type' => 'select',
    '#options' => array(1 => 1  ,2 =>2  ,3 => 3 ,4 => 4),
    '#title' => 'formater ahah',
  );
  
  return $form;
}


/**
 * Implementation of hook_media_user_files_select
 *
 * @param string $node_type
 *   drupal node type
 * @param string $field
 *   field name that is being overridden
 * @param int $uid
 *   user id
 */
function media_upload_media_user_files_select($node_type, $field, $uid) {
  return array(
    t('Add files') => array(
      t('New file') => media_resource_display_upload_form(),
    )
  );
}


/**
 * Implementation of hook_media_user_files_select
 *
 * @param string $node_type
 * @param string $field
 * @param int $uid
 */
function media_upload_media_user_files_select2($node_type, $field, $uid) {
  return array(
    t('Add files') => array(
      t('Embeded file') => media_upload_display_embed_form(),
    )
  );
}


/**
 * Display the upload form for the tab 
 * @return string
 */ 
function media_upload_display_embed_form() {
  $form['media_upload']['upload'] = array(
    '#type' => 'textarea',
    '#title' => t('Upload your file'),
   );
   return $form;
}

/**
 * @TODO REMOVE
 *
 * @param unknown_type $node_type
 * @param unknown_type $field
 * @param unknown_type $uid
 * @return unknown
 */
function media_upload_media_mover_resource($node_type, $field, $uid) {
  $files = array();
  $results = db_query('SELECT complete_file FROM {media_mover_files} ');
  while ($file = db_fetch_array($results)) {
    $files[] = array(
      'uri' => $file['complete_file'],
      'filename' => basename($file['complete_file']),
      'meta' => '',
    );
  }  
  return array( 
    t('My files') => array(
      t('Media Mover') => media_resource_display_upload_form($files, t('Your Media Mover files')),     
    )
  );
}